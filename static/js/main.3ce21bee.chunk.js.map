{"version":3,"sources":["ibu.js","abv.js","gravity.js","index.js"],"names":["Ibu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","boilSizeGAL","batchSizeGAL","target_og","boil_gravity","totalIbu","hops","ounces","alphaAcid","boilTime","utilization","ibus","aau","handleSubmit","bind","assertThisInitialized","handleIBUChange","handleAddHopClick","handleHopChange","updateHop","hop","console","log","utl","setState","gravityAdjustByVolume","fG_starting","Math","pow","fG","fT","E","round","target_gravity","target_vol","current_vol","total_target_points","gravityPoints","curr_gravity_points","gravity","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","event","target","name","defineProperty","updateAllHops","floor","i","calc_utilization","forEach","calcIbu","preventDefault","concat","_this2","hopsToRender","map","react_default","a","createElement","key","className","type","defaultValue","onChange","id","onSubmit","fg","onClick","React","Component","Abv","og","abv","formula","handleChange","calculateAbv","checked","Gravity","measured_gravity","temp","hydrometer_calibration","corrected_gravity","calcGravityAdjust","Calc","ibu","ReactDOM","render","src_Calc","document","getElementById"],"mappings":"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","file":"static/js/main.3ce21bee.chunk.js","sourcesContent":["import React from 'react';\n// import { thisTypeAnnotation } from '@babel/types';\n\n// http://howtobrew.com/book/section-1/hops/hop-bittering-calculations\n// IBU = AAU * U * 75 / Vrecipe\n\n\nclass Ibu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            boilSizeGAL : 6.5,\n            batchSizeGAL : 5,\n            target_og : null,\n            boil_gravity : null,\n            totalIbu : 0,\n            hops : [\n                {\n                    ounces: null,\n                    alphaAcid: null,\n                    boilTime: null,\n                    utilization: 0,\n                    ibus: 0,\n                    aau: null,\n                }\n            ],\n        };\n    // binding necessary to make \"this\" work in the callback\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleIBUChange = this.handleIBUChange.bind(this);\n    this.handleAddHopClick = this.handleAddHopClick.bind(this);\n    this.handleHopChange = this.handleHopChange.bind(this);\n    this.updateHop = this.updateHop.bind(this);\n\n    }\n\n    // Utilization = f(G) x f(T) where: \n    // f(G) = 1.65 x 0.000125^(Gb - 1) \n    // f(T) = [1 - e^(-0.04 x T)] / 4.15\n    calc_utilization(hop) {\n        console.log(\"***Utilization***\");\n        // const boil_gravity = this.state.boil_gravity;\n        let utl = 0;\n        // calculate and set state the boil_gravity\n        \n        this.setState({\n            boil_gravity: this.gravityAdjustByVolume(this.state.target_og, this.state.batchSizeGAL, this.state.boilSizeGAL),\n        });\n        const fG_starting = 1.65 * 0.000125**(this.state.boil_gravity - 1);\n        const fG_target = 1.65 * 0.000125**(this.state.target_og - 1);\n        const fG = (fG_target + fG_starting) / 2;\n\n        const fT = (1 - Math.E**(-0.04 * hop.boilTime)) / 4.15;\n\n        utl = Math.round(fG * fT * 1000)/1000;\n        console.log(\"fG: \" + fG + \", fT: \" + fT + \", utilization: \" + utl );\n\n        return utl;\n    }\n\n    // calculates current gravity based on a known target gravity, target volume, and current volume.\n    // https://www.wildabouthops.nz/how_to_adjust_specific_gravity.html\n    gravityAdjustByVolume(target_gravity, target_vol, current_vol) {\n        const tg_points = this.gravityPoints(target_gravity)\n        const total_target_points = tg_points * target_vol\n        const curr_gravity_points = Math.round(total_target_points / current_vol)\n\n        console.log(\"new boil gravity points: \" + curr_gravity_points)\n        return (curr_gravity_points / 1000) + 1\n    }\n\n    gravityPoints(gravity) {\n        return (gravity * 1000) % 1000\n    }\n\n    calcIbu() {\n        const hops = this.state.hops;\n        \n        let totalIbu = 0;\n        for (let hop of hops) {\n            totalIbu += hop.ibus;\n        }\n        \n        this.setState({\n            totalIbu : Math.round(totalIbu * 1000) / 1000,\n        });\n        console.log(\"totalIbu: \", this.state.totalIbu);\n    }\n\n    // In Javascript, when you create an object literal {} and you wrap the object’s key \n    // in array brackets [key] you can dynamically set that key.\n    // https://medium.com/@bretdoucette/understanding-this-setstate-name-value-a5ef7b4ea2b4\n    // TODO: Calculate and update boil_gravity\n    handleIBUChange(event) {\n        // event.preventDefault();\n        console.log(\"*************handleIBUChange*************\");\n        console.log(\"event target name: \", event.target.name);\n        console.log(\"event target value: \", event.target.value);\n\n\n        this.setState({\n            [event.target.name] : event.target.value,\n        }, this.updateAllHops);\n\n        console.log(\"boilSizeGAL: \", Math.floor(this.state.boilSizeGAL) + \" ,batchSizeGAL: \", Math.floor(this.state.batchSizeGAL) + \" ,target_og: \", this.state.target_og + \" ,boil_gravity: \", this.state.boil_gravity + \" ,hops[0]: \", this.state.hops[0].aau);\n    }\n\n    updateHop(hop, i) {\n        console.log(\"*** update hop ***\");\n        console.log(\"i: \" + i + \". hop.ounces: \" + hop.ounces + \", hop.alphaAcid: \" + hop.alphaAcid);\n        console.log(typeof(this) == 'undefined');\n        if (hop.ounces && hop.alphaAcid && this.state.target_og) {\n            hop.aau = Math.round(hop.ounces * hop.alphaAcid * 1000) / 1000;\n            hop.utilization = this.calc_utilization(hop);  \n            hop.ibus = Math.round((hop.utilization * hop.aau * 75 * 1000)/this.state.batchSizeGAL) / 1000;\n        }\n        console.log(\"i: \" + i + \". hop.aau: \" + hop.aau + \", hop.utilization: \" + hop.utilization);\n    }\n\n    handleSubmit(event) {\n        let hops = this.state.hops;\n        hops.forEach(this.updateHop);\n\n        this.setState({\n            hops: hops,\n        });\n\n        this.calcIbu();\n\n        // passing in event when calling handleSubmit caused React\n        // to queue up the setState in handleIBUChange.  Values were one step behind.\n        event.preventDefault();\n    }\n\n    updateAllHops() {\n        let hops = this.state.hops;\n        hops.forEach(this.updateHop);\n\n        this.setState({\n            hops: hops,\n        });\n    }\n\n    handleHopChange(event, i) {\n        let hops = this.state.hops;\n        let hop = hops[i];\n        console.log('*****handleHopChange******');\n        hop[event.target.name] = event.target.value;\n        console.log(\"ounces \" + hop.ounces + \". Alpha Acid: \" +  hop.alphaAcid);\n\n        if (hop.ounces && hop.alphaAcid && this.state.target_og) {\n            hop.aau = Math.round(hop.ounces * hop.alphaAcid * 1000) / 1000;\n            hop.utilization = this.calc_utilization(hop);\n            hop.ibus = Math.round((hop.utilization * hop.aau * 75 * 1000)/this.state.batchSizeGAL) / 1000;\n        }\n        hops[i] = hop;\n\n        console.log('AFTER::: ');\n        this.setState({\n            hops : hops,\n        });\n\n        console.log(\"i: \" + i + \", ounces: \" + this.state.hops[i].ounces + \", alphaAcid: \" + this.state.hops[i].alphaAcid + \", aau: \" + this.state.hops[i].aau + \", utilization: \" + this.state.hops[i].utilization + \", target og: \" + this.state.target_og);\n        // event.preventDefault();\n    }\n\n    handleAddHopClick(event) {\n        console.log('hopEvent');\n        const newHop = \n        {\n            ounces: null,\n            alphaAcid: null,\n            boilTime: null,\n            utilization: 0,\n            ibus: 0,\n            aau: null,\n        }\n        this.setState({\n            hops : this.state.hops.concat(newHop),\n        });\n        // event.preventDefault();\n    }\n\n\n    render() {\n        const hops = this.state.hops;\n        const hopsToRender = hops.map((hop, i) => {\n            return ( \n            <div key={i} className=\"hop\">\n            {/* <div className=\"hop-title\">{i + 1}</div> */}\n            <div className=\"input-wrapper hop-ounces\">\n                <div className=\"inputLabel\">Ounces:</div>\n                    <input \n                        type=\"text\"\n                        name=\"ounces\" \n                        defaultValue={hop.ounces}\n                        onChange={(event) => this.handleHopChange(event, i)}\n                    />\n            </div>\n            <div className=\"input-wrapper hop-alpha-acid\">\n                <div className=\"inputLabel\">% Alpha Acid:</div>\n                    <input \n                        type=\"text\"\n                        name=\"alphaAcid\" \n                        defaultValue={hop.alphaAcid}\n                        onChange={(event) => this.handleHopChange(event, i)}\n                    />\n            </div>\n            <div className=\"input-wrapper hop-boil-time\">\n                <div className=\"inputLabel\">Boil Time in Minutes:</div>\n                    <input \n                        type=\"text\"\n                        name=\"boilTime\" \n                        defaultValue={hop.boilTime}\n                        onChange={(event) => this.handleHopChange(event, i)}\n                    />\n                </div>\n            <div className=\"input-wrapper hop-utilization\">\n                <div className=\"inputLabel\">Utilization:</div>\n                <span>{this.state.hops[i].utilization}</span>\n            </div>\n            <div className=\"input-wrapper hop-ibu\">\n                <div className=\"inputLabel\">ibus:</div>\n                <span>{this.state.hops[i].ibus}</span>\n            </div>\n            </div>\n            );\n        });\n\n        return (\n            <div className=\"flexItem ibu\">\n            <div className=\"flexItemInner\">\n            <h2>IBU Calculator</h2>\n            <form id=\"ibuForm\" onSubmit={this.handleSubmit}>\n                <div className=\"input-wrapper\">\n                    <div className=\"inputLabel\">Boil Size in Gallons:</div>\n                    <input \n                        type=\"text\"\n                        name=\"boilSizeGAL\" \n                        defaultValue={this.state.boilSizeGAL}\n                        onChange={this.handleIBUChange}\n                    />\n                </div>\n                <div className=\"input-wrapper\">\n                    <div className=\"inputLabel\">Batch Size in Gallons:</div>\n                    <input \n                        type=\"text\"\n                        name=\"batchSizeGAL\" \n                        defaultValue={this.state.batchSizeGAL}\n                        onChange={this.handleIBUChange}\n                    />\n                </div>\n                <div className=\"input-wrapper\">\n                    <div className=\"inputLabel\">Target OG:</div>\n                    <input \n                        type=\"text\"\n                        name=\"target_og\" \n                        defaultValue={this.state.fg}\n                        onChange={this.handleIBUChange}\n                    />\n                </div>\n                <div className=\"total-ibu red\">\n                    <span>TOTAL IBUs:  </span>\n                    {this.state.totalIbu}\n                </div>\n                <div className=\"red\">\n                    <span>Boil Gravity:  </span>\n                    {this.state.boil_gravity}\n                </div>\n                {/* Removing Submit button.  I want to upate all values with onChange event. */}\n                {/* <input type=\"submit\" value=\"submit\"/> */}\n                \n\n                <h5 className=\"hops-header\">HOPS:</h5>\n                <div className=\"hops-wrapper\">\n                    {hopsToRender}\n                    <input type=\"submit\" className=\"add-hop-btn\" onClick={this.handleAddHopClick} value=\"Add Hop\"/>\n                    <input type=\"submit\" value=\"Update Total IBUs\" className=\"submit-btn\"/> \n                </div>\n                \n            </form>\n            </div>\n            </div>\n        );\n    }\n} \n\n\n\nexport default Ibu;\n","import React from 'react';\n\nclass Abv extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            og : 1.05,\n            fg : 1.01,\n            abv: 5.25,\n            formula : \"std\",\n        };\n    // binding necessary to make \"this\" work in the callback\n    this.handleChange = this.handleChange.bind(this);\n\n}\n\n    handleChange(event) {\n        console.log(\"******* Handle IBU change ********\");\n        console.log(\"Before call to setState. name: \", event.target.name + \", value: \", event.target.value + \", formula: \", this.state.formula);\n        this.setState({\n            [event.target.name] : event.target.value,\n        }, this.calculateAbv);\n        console.log(\"After call to setState. og: \", this.state.og + \", fg :\", this.state.fg + \", abv: \", this.state.abv + \", formula: \", this.state.formula);\n        // commenting this out allowed for the change in radio button selection to be updated with just one click.\n        // event.preventDefault();\n    }\n\n\n    calculateAbv(event) {\n        let abv = 0;\n        const og = this.state.og;\n        const fg = this.state.fg;\n        if (this.state.formula === 'std') {\n            abv = Math.round((og - fg) * 131.25 *1000) / 1000;\n        }\n        else {\n            abv = Math.round((76.08 * (og-fg) / (1.775-og)) * (fg / 0.794) * 1000) / 1000;\n        }\n        this.setState({\n            abv : abv,\n        });\n        console.log(\"abv: \", this.state.abv);\n    }\n\n\n    render() {\n        return (\n            <div className=\"flexItem abv\">\n            <div className=\"flexItemInner\">\n            <h2>ABV Calculator</h2>\n            <form>\n                <div className=\"input-wrapper\">\n                    <div className=\"inputLabel\">Equation:</div>\n                    <br></br>\n                    <input \n                        type=\"radio\" \n                        name=\"formula\"\n                        value=\"std\"\n                        checked={this.state.formula === \"std\"}\n                        onChange={this.handleChange}\n                    /> <span>Standard</span>\n                    <br></br>\n                    <input \n                        type=\"radio\" \n                        name=\"formula\"\n                        value=\"alt\"\n                        checked={this.state.formula === \"alt\"}\n                        onChange={this.handleChange}\n                    /> <span>Alternate (for high ABV)</span>\n                    <br></br><br></br>\n                </div>\n                <div className=\"input-wrapper\">\n                    <div className=\"inputLabel\">OG:</div>\n                    <input \n                        type=\"text\"\n                        name=\"og\" \n                        defaultValue={this.state.og}\n                        onChange={this.handleChange}\n                    />\n                </div>\n                <div className=\"input-wrapper\">\n                    <div className=\"inputLabel\">FG:</div>\n                    <input \n                        type=\"text\"\n                        name=\"fg\" \n                        defaultValue={this.state.fg}\n                        onChange={this.handleChange}\n                    />\n                </div>\n                <br></br>\n                {/* <input type=\"submit\" value=\"submit\" className=\"submit-btn\"/> */}\n            </form>\n            <div className=\"abv-value\">\n                <span>ABV:  </span>\n                {this.state.abv}\n            </div>\n            </div>\n            </div>\n        );\n    }\n} \n\n\nexport default Abv;","import React from 'react';\n\n// The Equation Used\n// ASG=MSG*((1.00130346-0.000134722124*ST+0.00000204052596*ST^2-0.00000000232820948*ST^3)/(1.00130346-0.000134722124*HTC+0.00000204052596*HTC^2-0.00000000232820948*HTC^3))\n\n// Where:\n// MSG: Measured Specific Gravity\n// ST: Sample Temperature\n// HCT: Hydrometer Calibration Temperature\n// ASG: Adjusted Specific Gravity\n\nclass Gravity extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            measured_gravity : 1.056,\n            temp : 80,\n            hydrometer_calibration : 60,\n            corrected_gravity : 1.0585,\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name] : event.target.value,\n        }, this.calcGravityAdjust);\n        // event.preventDefault();\n    }\n\n    calcGravityAdjust() {\n        const corrected_gravity = this.state.measured_gravity*((1.00130346-0.000134722124*this.state.temp+0.00000204052596*Math.pow(this.state.temp,2)-0.00000000232820948* Math.pow(this.state.temp,3))/(1.00130346-0.000134722124*this.state.hydrometer_calibration+0.00000204052596* Math.pow(this.state.hydrometer_calibration,2)-0.00000000232820948*Math.pow(this.state.hydrometer_calibration,3)))\n\n        this.setState({\n            corrected_gravity : Math.round(corrected_gravity * 10000) / 10000,\n        });\n\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"flexItem\">\n                <div className=\"flexItemInner\">\n                    <h2>Gravity Adjust by Temperature</h2>\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"input-wrapper\">\n                        <div className=\"inputLabel\">Measured Gravity:</div>\n                            <input \n                                type=\"text\"\n                                name=\"measured_gravity\" \n                                defaultValue={this.state.measured_gravity}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                        <div className=\"input-wrapper\">\n                        <div className=\"inputLabel\">Temperature:</div>\n                            <input \n                                type=\"text\"\n                                name=\"temp\" \n                                defaultValue={this.state.temp}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                        <div className=\"input-wrapper\">\n                        <div className=\"inputLabel\">Hydrometer Calibration:</div>\n                            <input \n                                type=\"text\"\n                                name=\"hydrometer_calibration\" \n                                defaultValue={this.state.hydrometer_calibration}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                        <br></br>\n                        {/* <input type=\"submit\" value=\"Submit\" className=\"submit-btn\"/>  */}\n                    </form>\n                    <div className=\"abv-value\">\n                        <span>Corrected Gravity:  </span>\n                        {this.state.corrected_gravity}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Gravity;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Ibu from './ibu.js';\nimport Abv from './abv.js';\nimport Gravity from './gravity.js';\n\n\nclass Calc extends React.Component {\n    render() {\n        return (\n            <div className=\"flexContainer\">\n                <Abv />\n                <Ibu />\n                <Gravity />\n            </div>\n        );\n    }\n\n}\n\nReactDOM.render(<Calc />, document.getElementById('calc'));"],"sourceRoot":""}